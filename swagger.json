{
  "openapi": "3.0.1",
  "info": {
    "version": "v1.0",
    "title": "SoYummy API",
    "description": "API documentation for app"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://project-yummy-b.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Recipes",
      "description": "Recipes endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "The user is logged out",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Information found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/update-user": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update info about user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's info",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "User's avatar"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's info update successfully",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "avatarURL": {
                          "type": "string",
                          "description": "User's avatar",
                          "example": "https://www.gravatar.com/avatar/80e4d520990385ee498390e7a735e7b6"
                        },
                        "name": {
                          "type": "string",
                          "description": "User's name",
                          "example": "Margo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/subscribe": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user's subscription",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's email",
          "required": ["email"],
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "user@testmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User subscribed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "description": "User's id"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email",
                          "format": "email"
                        },
                        "subscription": {
                          "type": "string",
                          "nullable": true,
                          "description": "User's subscription"
                        }
                      }
                    }
                  },
                  "example": {
                    "userId": "AeHIrLTr6JkxGE6SN-0Rw",
                    "email": "user@testmail.com",
                    "subscription": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "api/recipes/category-list": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Return a list of categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A JSON array of categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mary"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@testmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userId": {
            "type": "string",
            "description": "User's id"
          }
        },
        "example": {
          "userId": "AeHIrLTr6JkxGE6SN-0Rw",
          "name": "Mary",
          "email": "user@testmail.com"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@testmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "descriptions": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YWFhM2Q4M2RjYTU5YzgxMjRkMTE4YiIsImlhdCI6MTY4ODkwNTMxNywiZXhwIjoxNjg4OTg4MTE3fQ.3E2nKL-nFuDwe9zCyLQBPc14DIcq8Yf9tejUXu7fhJg"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YWFhM2Q4M2RjYTU5YzgxMjRkMTE4YiIsImlhdCI6MTY4ODkwNTMxNywiZXhwIjoxNjg4OTg4MTE3fQ.3E2nKL-nFuDwe9zCyLQBPc14DIcq8Yf9tejUXu7fhJg"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "CategoryList": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "Beef",
          "Breakfast",
          "Chicken",
          "Dessert",
          "Goat",
          "Lamb",
          "Miscellaneous",
          "Pasta",
          "Pork",
          "Seafood",
          "Side",
          "Starter",
          "Vegan",
          "Vegetarian"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
